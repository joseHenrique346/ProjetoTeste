// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProjetoTeste.Infrastructure.Persistence.Context;

#nullable disable

namespace ProjetoTeste.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250113171045_UpToDateMigration")]
    partial class UpToDateMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("ProjetoTeste.Infrastructure.Persistence.Entities.Brand", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(6)
                        .HasColumnType("varchar(6)")
                        .HasColumnName("codigo");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("descricao");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)")
                        .HasColumnName("nome");

                    b.HasKey("Id");

                    b.ToTable("marca", (string)null);
                });

            modelBuilder.Entity("ProjetoTeste.Infrastructure.Persistence.Entities.Customer", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<string>("CPF")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("varchar(11)")
                        .HasColumnName("cpf");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("varchar(60)")
                        .HasColumnName("email");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)")
                        .HasColumnName("nome");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("varchar(11)")
                        .HasColumnName("telefone");

                    b.HasKey("Id");

                    b.ToTable("cliente", (string)null);
                });

            modelBuilder.Entity("ProjetoTeste.Infrastructure.Persistence.Entities.Order", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("data_de_criacao");

                    b.Property<long>("CustomerId")
                        .HasColumnType("bigint");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(65,30)");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("pedido", (string)null);
                });

            modelBuilder.Entity("ProjetoTeste.Infrastructure.Persistence.Entities.Product", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<long?>("BrandId")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnName("marca_id");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(6)
                        .HasColumnType("varchar(6)")
                        .HasColumnName("codigo");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("descricao");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)")
                        .HasColumnName("nome");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(65,30)");

                    b.Property<long>("Stock")
                        .HasMaxLength(6)
                        .HasColumnType("bigint")
                        .HasColumnName("estoque");

                    b.HasKey("Id");

                    b.HasIndex("BrandId");

                    b.ToTable("produto", (string)null);
                });

            modelBuilder.Entity("ProjetoTeste.Infrastructure.Persistence.Entities.ProductOrder", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<long>("OrderId")
                        .HasColumnType("bigint")
                        .HasColumnName("pedido_id");

                    b.Property<long>("ProductId")
                        .HasColumnType("bigint")
                        .HasColumnName("produto_id");

                    b.Property<int>("Quantity")
                        .HasColumnType("int")
                        .HasColumnName("quantidade");

                    b.Property<decimal>("SubTotal")
                        .HasColumnType("decimal(65,30)")
                        .HasColumnName("preco_total");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(65,30)")
                        .HasColumnName("preco_unitario");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("pedido_de_produto", (string)null);
                });

            modelBuilder.Entity("ProjetoTeste.Infrastructure.Persistence.Entities.Order", b =>
                {
                    b.HasOne("ProjetoTeste.Infrastructure.Persistence.Entities.Customer", "Customer")
                        .WithMany("Order")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("ProjetoTeste.Infrastructure.Persistence.Entities.Product", b =>
                {
                    b.HasOne("ProjetoTeste.Infrastructure.Persistence.Entities.Brand", "Brand")
                        .WithMany("ListProduct")
                        .HasForeignKey("BrandId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fkey_id_marca");

                    b.Navigation("Brand");
                });

            modelBuilder.Entity("ProjetoTeste.Infrastructure.Persistence.Entities.ProductOrder", b =>
                {
                    b.HasOne("ProjetoTeste.Infrastructure.Persistence.Entities.Order", "Order")
                        .WithMany("ListProductOrder")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProjetoTeste.Infrastructure.Persistence.Entities.Product", "Product")
                        .WithMany("ListProductOrder")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("ProjetoTeste.Infrastructure.Persistence.Entities.Brand", b =>
                {
                    b.Navigation("ListProduct");
                });

            modelBuilder.Entity("ProjetoTeste.Infrastructure.Persistence.Entities.Customer", b =>
                {
                    b.Navigation("Order");
                });

            modelBuilder.Entity("ProjetoTeste.Infrastructure.Persistence.Entities.Order", b =>
                {
                    b.Navigation("ListProductOrder");
                });

            modelBuilder.Entity("ProjetoTeste.Infrastructure.Persistence.Entities.Product", b =>
                {
                    b.Navigation("ListProductOrder");
                });
#pragma warning restore 612, 618
        }
    }
}
